# build.yml forked from github.com/Fangliding/v2rayNG
# thanks @Fangliding @nagi_ly

name: Build APK (Specify the commit)

on:
  workflow_dispatch:
    inputs:
      COMMIT_HASH:
        description: "Fill in Xray-core's commit hash or short hash. Default: HEAD~0 (latest commit)."
        required: true
        type: string
        default: 'HEAD~0'

env:
  ALIAS: ${{ secrets.ALIAS }}
  KEYPASSWORD: ${{ secrets.KEYPASSWORD }}
  KEYSTOREPASSWORD: ${{ secrets.KEYSTOREPASSWORD }}
  SIGNINGKEYBASE64: ${{ secrets.SIGNINGKEYBASE64 }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout v2rayNG repository
      uses: actions/checkout@v4
      with:
        repository: '2dust/v2rayNG'

    - name: Checkout AndroidLibXrayLite repository
      uses: actions/checkout@v4
      with:
        repository: '2dust/AndroidLibXrayLite'
        path: 'AndroidLibXrayLite'

    - name: Checkout Xray-core repository
      uses: actions/checkout@v4
      with:
        repository: 'xtls/xray-core'
        path: 'xray-core'
        fetch-depth: '0'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Get Go version
      run: |
        echo "GO_VERSION=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '\"version\": \"[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?\"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/\"//g')" >> $GITHUB_ENV

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.4'
        cache: false
        
    - name: Install gomobile
      run: |
        go install github.com/sagernet/gomobile/cmd/gomobile@latest
        export PATH=$PATH:~/go/bin
        
    - name: Setup Android SDK Tools
      uses: android-actions/setup-android@v3.2.2
      with:
        cmdline-tools-version: 10406996
        
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1.5.0
      with:
        ndk-version: 'r27b'
        link-to-sdk: true
        
    - name: Get xray short sha
      run: | 
        cd xray-core
        git checkout ${{ inputs.COMMIT_HASH }}
        echo "XRAY_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Build dependencies
      run: |
        cd AndroidLibXrayLite
        sed -i "s/v2core.Version())/v2core.Version() + \"@${{ env.XRAY_SHA }}\")/" libv2ray_main.go
        go get github.com/xtls/xray-core@${{ env.XRAY_SHA }}
        gomobile init
        go mod tidy -v
        gomobile bind -v -androidapi 21 -ldflags='-s -w' ./
        cp libv2ray.aar ../V2rayNG/app/libs/

    - name: Decode Keystore
      uses: timheuer/base64-to-file@v1
      id: android_keystore
      with:
        fileName: "android_keystore.jks"
        encodedString: ${{ env.SIGNINGKEYBASE64 }}
        
    - name: Build APK
      run: |
        cd V2rayNG
        chmod 755 gradlew
        sed -i 's/org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8/' gradle.properties
        ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${{ steps.android_keystore.outputs.filePath }} -Pandroid.injected.signing.store.password=${{ env.KEYSTOREPASSWORD }} -Pandroid.injected.signing.key.alias=${{ env.ALIAS }} -Pandroid.injected.signing.key.password=${{ env.KEYPASSWORD }}

    - name: List APK files
      run: |
        find V2rayNG/app/build/outputs/apk/ -type f -exec du -h {} \;

    - name: Upload arm64-v8a APK
      uses: actions/upload-artifact@v4
      if: ${{  success() }}
      with:
        name: arm64-v8a
        path: V2rayNG/app/build/outputs/apk/*/release/*arm64-v8a*.apk

    - name: Upload armeabi-v7a APK
      uses: actions/upload-artifact@v4
      if: ${{  success() }}
      with:
        name: armeabi-v7a
        path: V2rayNG/app/build/outputs/apk/*/release/*armeabi-v7a*.apk

    - name: Upload x86 APK
      uses: actions/upload-artifact@v4
      if: ${{  success() }}
      with:
        name: x86-apk
        path: V2rayNG/app/build/outputs/apk/*/release/*x86*.apk

    - name: Upload to release
      uses: svenstaro/upload-release-action@v2
      if: github.event.inputs.release_tag != ''
      with:
        file: V2rayNG/app/build/outputs/apk/*playstore*/release/*.apk
        tag: ${{ github.event.inputs.release_tag }}
        file_glob: true
        prerelease: true
